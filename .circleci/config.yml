# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build with Maven
          command: mvn -B package --file app/pom.xml
  static:
    docker:
      - image: veracode/api-wrapper-java:latest
    steps:
      - run:
          name: Static Upload and Scan
          command: |
            java -jar /opt/veracode/api-wrapper.jar \
              -vid ${VERACODE_API_KEY_ID} \
              -vkey ${VERACODE_API_KEY_SECRET} \
              -action UploadAndScan \
              -appname VeraDemo \
              -version ${CIRCLE_PROJECT_REPONAME}_CirclCI_Build_${CIRCLE_BUILD_NUM} \
              -filepath app/target/verademo.war \
              -createprofile false
  pipeline:
    docker:
      - image: veracode/pipeline-scan:latest
    steps:
      - run:
          name: Pipeline Scan
          command: |
            chown -R $USER:$USER app/target
            java -jar /opt/veracode/pipeline-scan.jar \
              -vid ${VERACODE_API_KEY_ID} \
              -vkey ${VERACODE_API_KEY_SECRET} \
              -f app/target/verademo.war

#            javawrapperversion=$(curl https://repo1.maven.org/maven2/com/veracode/vosp/api/wrappers/vosp-api-wrappers-java/maven-metadata.xml | grep latest |  cut -d '>' -f 2 | cut -d '<' -f 1)
#            curl -sS -o VeracodeJavaAPI.jar "https://repo1.maven.org/maven2/com/veracode/vosp/api/wrappers/vosp-api-wrappers-java/$javawrapperversion/vosp-api-wrappers-java-$javawrapperversion.jar"


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
#  Static Upload and Scan: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
#    jobs:
#      - build
#      - static
  Pipeline Scan:
    jobs:
      - build
      - pipeline:
          requires:
            - build 
